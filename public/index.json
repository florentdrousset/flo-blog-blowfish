[{"content":"","date":"19 août 2023","permalink":"/","section":"Florent Drousset","summary":"","title":"Florent Drousset"},{"content":" Préambule # Pour rappel :\nune image Docker est un template contenant des instructions pour créer un container Docker un fichier Dockerfile permet de définir ces instructions afin de créer une image Docker une image Docker peut comporter plusieurs layers et commence toujours avec un layer de base Pour notre premier test, nous allons utiliser une image de la distro Linux Alpine et y installer vim. La première instruction de notre Dockerfile (nommé Dockerfile) sera donc :\nFROM alpine:latest En effet, une image peut être (et sera la plupart du temps) basée sur une autre image. En l\u0026rsquo;occurence, nous nous basons sur la dernière version de Alpine. Si nous souhaitions utiliser une version spécifique, on pourrait alors écrire alpine:3.15.10.\nLa prochaine instruction sera\nRUN apk update \u0026amp;\u0026amp; \\ apk add vim L\u0026rsquo;instruction RUN va créer un nouveau layer Docker et exécuter l\u0026rsquo;instruction passée en paramètre. En l\u0026rsquo;occurence, les instructions executées seront apk update et apk add vim.\nConstruction de l\u0026rsquo;image # Pour constuire une image à partir de notre Dockerfile, on utilisera docker build. docker build requiert à minima un contexte : en l\u0026rsquo;occurence le dossier dans lequel se trouve le Dockerfile. On utilisera également le flag -t afin de tagger notre image avec un nom pour des raisons de praticité.\ndocker build -t dockerfile-tutorial . Docker va donc build notre image. Pour vérifier si l\u0026rsquo;image a bien été créée :\ndocker images Retour console :\nREPOSITORY TAG IMAGE ID CREATED SIZE dockerfile-tutorial latest 4f21a4e055d1 40 hours ago 41.4MB Construction du container # Bien ! Nous avons notre image, nous pouvons à présent créer un container à partir de celle-ci. Le container sera une instance de notre image qui n\u0026rsquo;est, encore une fois, qu\u0026rsquo;un modèle ou template permettant de créer des containers Docker. Pour run un container à partir de notre image :\ndocker run --rm -ti dockerfile-tutorial /bin/sh Analysons cette commande :\ndocker run : lance un conteneur Docker à partir d\u0026rsquo;une image spécifiée (en l\u0026rsquo;occurence, dockerfile-tutorial)\n--rm: indique à Docker de supprimer automatiquement le conteneur une fois qu\u0026rsquo;il est arrêté. Sans cette option, on devrait manuellement supprimer le conteneur à coup de docker rm après l\u0026rsquo;avoir arrêté.\n-ti: -t Alloue un pseudo-TTY : le container sera run avec un terminal interactif. -i : Permet de garder STDIN ouvert, afin de pouvoir interagir avec le container en direct.\nSi tout s\u0026rsquo;est bien passé, vous devriez être gratifié d\u0026rsquo;un :\n/ # Vous voilà donc connecté au terminal de votre nouveau container basé sur l\u0026rsquo;image alpine. Comme nous avions spécifié l\u0026rsquo;installation de vim dans le Dockerfile, nous pouvons tester si celui-ci fonctionne bien :\nvim Nous voilà sur vim, lancé depuis notre nouveau container construit à partir du Dockefile que nous avons écrit. :q + entrée pour quitter vim, et taper exit pour quitter le container.\ndocker ps permet de lister tous les containers actifs. Notre container nommé dockerfile-tutorial ne devrait pas apparaître dans cette liste, car nous l\u0026rsquo;avions lancée avec le flag --rm.\n","date":"19 août 2023","permalink":"/posts/dockerfile-basics/","section":"Posts","summary":"Préambule # Pour rappel :","title":"Les bases de Dockerfile"},{"content":"","date":"19 août 2023","permalink":"/posts/","section":"Posts","summary":"","title":"Posts"},{"content":"","date":"1 janvier 0001","permalink":"/authors/","section":"Authors","summary":"","title":"Authors"},{"content":"","date":"1 janvier 0001","permalink":"/categories/","section":"Categories","summary":"","title":"Categories"},{"content":"","date":"1 janvier 0001","permalink":"/series/","section":"Series","summary":"","title":"Series"},{"content":"","date":"1 janvier 0001","permalink":"/tags/","section":"Tags","summary":"","title":"Tags"}]